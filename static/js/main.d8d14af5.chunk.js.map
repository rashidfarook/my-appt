{"version":3,"sources":["actions/itemAction.js","reducers/itemReducer.js","reducers/rootReducer.js","reducers/simpleReducer.js","store.js","App.js","actions/simpleAction.js","serviceWorker.js","index.js"],"names":["Types","CREATE_ITEM","DELETE_ITEM","itemAction","defaultState","items","itemReducer","state","arguments","length","undefined","action","type","ACTIONS","console","log","item","payload","newItem","id","description","newState","_","cloneDeep","push","index","findIndex","splice","combineReducers","simpleReducer","result","configureStore","initialState","createStore","rootReducer","applyMiddleware","thunk","Slot","window","REDUX_INITIAL_DATA","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showModal","setState","show","hideModal","showTime","t","showName","cname","names","stime","uname","value","status","handleChange","bind","assertThisInitialized","handleSubmit","event","target","newitems","preventDefault","_this2","btn_class","react_default","a","createElement","App_Modal","handleClose","onSubmit","name","onChange","JSON","stringify","className","onClick","React","Component","App","simpleAction","_this3","i","App_Slot","s","e","cnt","renderSlot","Modal","_ref","children","showHideClassName","connect","objectSpread","dispatch","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8d14af5.chunk.js","sourcesContent":["// types of action\r\nconst Types = {\r\n    CREATE_ITEM: \"CREATE_ITEM\",\r\n    DELETE_ITEM: \"DELETE_ITEM\"\r\n  };\r\n  // actions\r\n  const createItem = task => ({\r\n    type: Types.CREATE_ITEM,\r\n    payload: task\r\n  });\r\n  \r\n  const deleteItem = id => ({\r\n    type: Types.DELETE_ITEM,\r\n    payload: id\r\n  });\r\n  \r\n  export default {\r\n    createItem,\r\n    deleteItem,\r\n    Types\r\n  };","import ACTIONS from \"../actions/itemAction\";\r\nimport _ from \"lodash\";\r\n\r\nconst defaultState = {\r\n  items: []\r\n};\r\n\r\nconst itemReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.Types.CREATE_ITEM: {\r\n      console.log(action);\r\n\r\n      let item = action.payload;\r\n      let newItem = { id: state.items.length + 1, description: item };\r\n      let newState = _.cloneDeep(state);\r\n      newState.items.push(newItem);\r\n      return newState;\r\n    }\r\n\r\n    case ACTIONS.Types.DELETE_ITEM: {\r\n      let newState = _.cloneDeep(state);\r\n      let index = _.findIndex(newState.items, { id: action.payload });\r\n      newState.items.splice(index, 1);\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemReducer;\r\n","import { combineReducers } from 'redux';\r\nimport simpleReducer from './simpleReducer';\r\nimport itemReducer from './itemReducer';\r\nexport default combineReducers({\r\n simpleReducer,\r\n itemReducer\r\n});\r\n","export default (state = {}, action) => {\r\n    switch (action.type) {\r\n     case 'SIMPLE_ACTION':\r\n      return {\r\n       result: action.payload\r\n      }\r\n     default:\r\n      return state\r\n    }\r\n   }","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\nexport default function configureStore(initialState={}) {\r\n return createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(thunk)\r\n );\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport { simpleAction } from './actions/simpleAction';\nimport './App.css';\n\nconst reduxStore = configureStore(window.REDUX_INITIAL_DATA);\n\nclass Slot extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      value: '',\n      status: '',\n      show: false,\n      items: {names:[\"\", \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]} \n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(event) {\n    this.setState({uname: event.target.value});\n  }\n  handleSubmit(event) {\n    let newitems = this.state.items;\n    newitems.names[this.props.stime - 9] = event.target.value;\n    this.setState({items: newitems});\n    event.preventDefault();\n  }\n\n  showModal = () => {\n    this.setState({ show: true });\n  }\n  hideModal = () => {\n    this.setState({ show: false });\n  }\n  showTime = (t) => {\n    if(t<=12) return t + ':00AM';\n    else return (t-12) + ':00PM'\n  }\n  showName = () => {\n    let newitems = this.state.items;\n    let cname = newitems.names[this.props.stime - 9];\n    if(cname!='') return cname;\n    else return this.state.uname;\n  }\n\n  render() {\n    let btn_class = this.state.status != 'X' ? \"slot\" : \"slotred\";\n    return (\n      <div>\n      <Modal show={this.state.show} handleClose={this.hideModal} >\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input type=\"text\" value={this.showName()} name=\"uname\" onChange={this.handleChange} />\n          </label>       \n          <input type=\"submit\" value=\"Set Appointment\" />\n        </form>\n      <pre>{JSON.stringify(this.props)}</pre>\n      </Modal>\n      <button className={btn_class} onClick={()=>{ this.showModal(); this.setState({status: 'X'})}}>\n        {this.showTime(this.props.stime)}\n      </button>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  renderSlot(i) {\n    return <Slot stime={i} />;\n  }\n  renderSlots(s, e) {\n    for(let cnt=9;cnt<17;cnt++)\n    this.renderSlot(cnt);\n  }\n  simpleAction = (event) => {\n    this.props.simpleAction();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          My Appointment Scheduler\n        </header>\n        <div className=\"section\"> \n        {this.renderSlot(9)}\n        {this.renderSlot(10)}\n        {this.renderSlot(11)}\n        {this.renderSlot(12)}\n        {this.renderSlot(13)}\n        {this.renderSlot(14)}\n        {this.renderSlot(15)}\n        {this.renderSlot(16)}\n        {this.renderSlot(17)}\n        <br />\n        <br />\n        </div>\n        <div>\n        <button onClick={this.simpleAction}>Test redux action</button>\n        <br/>\n        <pre>{JSON.stringify(this.props)}</pre>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nconst Modal = ({ handleClose, show, children }) => {\n  const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n\n  return (\n    <div className={showHideClassName}>\n      <section className='modal-main'>\n        {children}\n        <button\n          onClick={handleClose}\n        >\n          Close\n        </button>\n      </section>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  ...state\n })\n\nconst mapDispatchToProps = dispatch => ({\n  simpleAction: () => dispatch(simpleAction())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//export default App;\n","export const simpleAction = () => dispatch => {\r\n    dispatch({\r\n     type: 'SIMPLE_ACTION',\r\n     payload: 'result_of_simple_action'\r\n    })\r\n   }\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}